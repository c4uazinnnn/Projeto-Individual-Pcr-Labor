<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= pageTitle %></title>
  <link rel="stylesheet" href="/css/estilos.css">
</head>
<body>
  <!-- Header horizontal (Topo) com logo e menu -->
  <%- include('../components/cabecalho') %>

  <!-- Layout principal -->
  <div class="main-layout">
    <!-- Área central para o conteúdo principal -->
    <main class="content-area">
      <!-- 8️⃣ Tela de Perfil -->
      <h1 class="page-title">Perfil</h1>

      <!-- Seletor de período financeiro -->
      <div style="
        display: flex;
        gap: 15px;
        margin-bottom: 30px;
      ">
        <button class="btn btn-primary" onclick="filtrarPeriodoFinanceiro('mes')" id="filtroMesPerfil">Este mês</button>
        <button class="btn btn-secondary" onclick="filtrarPeriodoFinanceiro('ultimo')" id="filtroUltimoPerfil">Último mês</button>
        <button class="btn btn-secondary" onclick="filtrarPeriodoFinanceiro('trimestre')" id="filtroTrimestre">Últimos 3 meses</button>
        <button class="btn btn-secondary" onclick="abrirRelatorioFinanceiro()">Relatório</button>
      </div>

      <!-- Campos principais: "A pagar", "A receber", "Saldo" -->
      <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; margin-bottom: 40px;">
        <!-- DADOS REAIS DO PERFIL -->
        <%
          const valorTotalVendas = stats.valorTotalVendas || 0;
          const valorTotalPedidos = stats.valorTotalPedidos || 0;
          const saldoAtual = valorTotalVendas - valorTotalPedidos;
        %>
        <div class="summary-card">
          <div class="card-icon" style="background: #ef4444;">💸</div>
          <div class="card-title">Pedidos Pendentes</div>
          <div class="card-value">R$ <%= valorTotalPedidos.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ".") %></div>
        </div>

        <div class="summary-card">
          <div class="card-icon" style="background: #16a34a;">💰</div>
          <div class="card-title">Total Vendas</div>
          <div class="card-value">R$ <%= valorTotalVendas.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ".") %></div>
        </div>

        <div class="summary-card">
          <div class="card-icon" style="background: #3b82f6;">💳</div>
          <div class="card-title">Saldo Líquido</div>
          <div class="card-value" style="color: <%= saldoAtual >= 0 ? '#16a34a' : '#ef4444' %>;">R$ <%= Math.abs(saldoAtual).toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ".") %></div>
        </div>
      </div>

      <!-- Blocos de meios de pagamento -->
      <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 30px; margin-bottom: 40px;">

        <!-- Pagamento via boleto - DADOS REAIS -->
        <div class="content-section">
          <div class="section-header">
            <h3 class="section-title">🧾 Pagamento via boleto</h3>
          </div>
          <div class="section-content">
            <div style="display: grid; gap: 15px;">
              <%
                const metodosBoleto = metodosPagamento.filter(m => m.tipo === 'boleto');
                if (metodosBoleto.length > 0) {
                  metodosBoleto.forEach(metodo => {
              %>
                <div style="background: #f8f9fa; padding: 15px; border-radius: 8px;">
                  <div style="font-weight: bold; color: #333; margin-bottom: 5px;"><%= metodo.descricao %></div>
                  <% if (metodo.dados_pagamento && metodo.dados_pagamento.banco) { %>
                    <div style="color: #666; font-size: 14px;">Banco: <%= metodo.dados_pagamento.banco %></div>
                    <% if (metodo.dados_pagamento.agencia) { %>
                      <div style="color: #666; font-size: 14px;">Agência: <%= metodo.dados_pagamento.agencia %></div>
                    <% } %>
                    <% if (metodo.dados_pagamento.conta) { %>
                      <div style="color: #666; font-size: 14px;">Conta: <%= metodo.dados_pagamento.conta %></div>
                    <% } %>
                  <% } %>
                  <div style="color: <%= metodo.ativo ? '#16a34a' : '#ef4444' %>; font-size: 12px; font-weight: bold; margin-top: 5px;">
                    <%= metodo.ativo ? '✅ Ativo' : '❌ Inativo' %>
                  </div>
                </div>
              <%
                  });
                } else {
              %>
                <div style="background: #f8f9fa; padding: 15px; border-radius: 8px; text-align: center; color: #666;">
                  <div style="font-size: 48px; margin-bottom: 10px;">🏦</div>
                  <div>Nenhuma conta bancária cadastrada</div>
                </div>
              <% } %>
              <button class="btn btn-primary" onclick="adicionarContaBancaria()" style="width: 100%;">+ Adicionar Conta</button>
            </div>
          </div>
        </div>

        <!-- Transferência bancária - DADOS REAIS -->
        <div class="content-section">
          <div class="section-header">
            <h3 class="section-title">🏦 Transferência bancária</h3>
          </div>
          <div class="section-content">
            <div style="display: grid; gap: 15px;">
              <%
                const metodosTransferencia = metodosPagamento.filter(m => m.tipo === 'transferencia');
                if (metodosTransferencia.length > 0) {
                  metodosTransferencia.forEach(metodo => {
              %>
                <div style="background: #f8f9fa; padding: 15px; border-radius: 8px;">
                  <div style="font-weight: bold; color: #333; margin-bottom: 5px;"><%= metodo.descricao %></div>
                  <% if (metodo.dados_pagamento) { %>
                    <% if (metodo.dados_pagamento.pix) { %>
                      <div style="color: #666; font-size: 14px;">PIX: <%= metodo.dados_pagamento.pix %></div>
                    <% } %>
                    <% if (metodo.dados_pagamento.banco) { %>
                      <div style="color: #666; font-size: 14px;">Banco: <%= metodo.dados_pagamento.banco %></div>
                    <% } %>
                    <% if (metodo.dados_pagamento.agencia && metodo.dados_pagamento.conta) { %>
                      <div style="color: #666; font-size: 14px;">Ag: <%= metodo.dados_pagamento.agencia %> | CC: <%= metodo.dados_pagamento.conta %></div>
                    <% } %>
                  <% } %>
                  <div style="color: <%= metodo.ativo ? '#16a34a' : '#ef4444' %>; font-size: 12px; font-weight: bold; margin-top: 5px;">
                    <%= metodo.ativo ? '✅ Ativo' : '❌ Inativo' %>
                  </div>
                </div>
              <%
                  });
                } else {
              %>
                <div style="background: #f8f9fa; padding: 15px; border-radius: 8px; text-align: center; color: #666;">
                  <div style="font-size: 48px; margin-bottom: 10px;">💳</div>
                  <div>Nenhum método de transferência cadastrado</div>
                </div>
              <% } %>
              <button class="btn btn-primary" onclick="adicionarMetodoTransferencia()" style="width: 100%;">+ Adicionar Método</button>
            </div>
          </div>
        </div>

        <!-- Link de pagamento - DADOS REAIS -->
        <div class="content-section">
          <div class="section-header">
            <h3 class="section-title">🔗 Link de pagamento</h3>
          </div>
          <div class="section-content">
            <div style="display: grid; gap: 15px;">
              <%
                const metodosLink = metodosPagamento.filter(m => m.tipo === 'link');
                if (metodosLink.length > 0) {
                  metodosLink.forEach(metodo => {
              %>
                <div style="background: #f8f9fa; padding: 15px; border-radius: 8px;">
                  <div style="font-weight: bold; color: #333; margin-bottom: 5px;"><%= metodo.descricao %></div>
                  <% if (metodo.dados_pagamento) { %>
                    <% if (metodo.dados_pagamento.gateway) { %>
                      <div style="color: #666; font-size: 14px;">Gateway: <%= metodo.dados_pagamento.gateway %></div>
                    <% } %>
                    <% if (metodo.dados_pagamento.taxa) { %>
                      <div style="color: #666; font-size: 14px;">Taxa: <%= metodo.dados_pagamento.taxa %></div>
                    <% } %>
                    <% if (metodo.dados_pagamento.link) { %>
                      <div style="color: #666; font-size: 12px; word-break: break-all;">Link: <%= metodo.dados_pagamento.link.substring(0, 50) %>...</div>
                    <% } %>
                  <% } %>
                  <div style="color: <%= metodo.ativo ? '#16a34a' : '#ef4444' %>; font-size: 12px; font-weight: bold; margin-top: 5px;">
                    <%= metodo.ativo ? '✅ Ativo' : '❌ Inativo' %>
                  </div>
                </div>
              <%
                  });
                } else {
              %>
                <div style="background: #f8f9fa; padding: 15px; border-radius: 8px; text-align: center; color: #666;">
                  <div style="font-size: 48px; margin-bottom: 10px;">🔗</div>
                  <div>Nenhum link de pagamento cadastrado</div>
                </div>
              <% } %>
              <button class="btn btn-primary" onclick="adicionarLinkPagamento()" style="width: 100%;">+ Novo Link</button>
            </div>
          </div>
        </div>

      </div>

      <!-- Informações do usuário -->
      <div class="content-section">
        <div class="section-header">
          <h3 class="section-title">👤 Informações Pessoais</h3>
          <button class="btn btn-secondary" onclick="editarInformacoesPessoais()">Editar</button>
        </div>
        <div class="section-content">
          <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 30px;">
            <div>
              <div style="margin-bottom: 20px;">
                <label style="font-size: 14px; color: #666; font-weight: 600;">Nome Completo</label>
                <div style="font-size: 16px; color: #333; font-weight: bold;" data-field="nome"><%= usuario.nome %></div>
              </div>
              <div style="margin-bottom: 20px;">
                <label style="font-size: 14px; color: #666; font-weight: 600;">Email</label>
                <div style="font-size: 16px; color: #333;" data-field="email"><%= usuario.email %></div>
              </div>
              <div style="margin-bottom: 20px;">
                <label style="font-size: 14px; color: #666; font-weight: 600;">Telefone</label>
                <div style="font-size: 16px; color: #333;" data-field="telefone"><%= usuario.telefone || 'Não informado' %></div>
              </div>
            </div>
            <div>
              <div style="margin-bottom: 20px;">
                <label style="font-size: 14px; color: #666; font-weight: 600;">Empresa</label>
                <div style="font-size: 16px; color: #333;"><%= usuario.empresa_nome || 'Não informado' %></div>
              </div>
              <div style="margin-bottom: 20px;">
                <label style="font-size: 14px; color: #666; font-weight: 600;">Último Login</label>
                <div style="font-size: 16px; color: #333;"><%= stats.ultimoLogin || 'Não disponível' %></div>
              </div>
              <div style="margin-bottom: 20px;">
                <label style="font-size: 14px; color: #666; font-weight: 600;">Status</label>
                <div style="font-size: 16px; color: #16a34a; font-weight: bold;">✅ Ativo</div>
              </div>
            </div>
          </div>

          <div style="display: flex; gap: 15px; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e0e0e0;">
            <button class="btn btn-primary" onclick="salvarAlteracoes()">Salvar Alterações</button>
            <button class="btn btn-secondary" onclick="alterarSenha()">Alterar Senha</button>
            <button class="btn btn-secondary" onclick="baixarDados()">Baixar Dados</button>
          </div>
        </div>
      </div>

    </main>

    <!-- Lateral direita com Tarefas, Calendário e Pergunte para IA -->
    <%- include('../components/barraLateral') %>
  </div>

  <script>
    // ===== FUNCIONALIDADES DE PERFIL =====

    /**
     * Filtros de período financeiro
     * Permite alternar entre diferentes períodos para visualização dos dados financeiros
     */
    function filtrarPeriodoFinanceiro(periodo) {
      // Atualizar botões visuais
      document.querySelectorAll('[id*="filtro"]').forEach(btn => {
        btn.className = 'btn btn-secondary';
      });

      if (periodo === 'mes') {
        document.getElementById('filtroMesPerfil').className = 'btn btn-primary';
      } else if (periodo === 'ultimo') {
        document.getElementById('filtroUltimoPerfil').className = 'btn btn-primary';
      } else if (periodo === 'trimestre') {
        document.getElementById('filtroTrimestre').className = 'btn btn-primary';
      }

      console.log(`💰 Filtrando dados financeiros por: ${periodo}`);

      // Simular atualização dos valores baseado no período
      const valores = {
        'mes': { pagar: 12450, receber: 28900, saldo: 16450 },
        'ultimo': { pagar: 8200, receber: 22100, saldo: 13900 },
        'trimestre': { pagar: 35600, receber: 78400, saldo: 42800 }
      };

      // Feedback visual para o usuário
      const toast = document.createElement('div');
      toast.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: #018820;
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        z-index: 1000;
      `;
      toast.textContent = `✅ Período atualizado: ${periodo === 'mes' ? 'Este mês' : periodo === 'ultimo' ? 'Último mês' : 'Últimos 3 meses'}`;
      document.body.appendChild(toast);
      setTimeout(() => toast.remove(), 3000);
    }

    // Relatório financeiro
    function abrirRelatorioFinanceiro() {
      const modal = document.createElement('div');
      modal.id = 'modalRelatorioFinanceiro';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 20px; width: 95%; max-width: 500px; max-height: 85vh; overflow-y: auto; margin: 20px;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
            <h2 style="margin: 0; color: #333; font-size: 18px;">📊 Relatório Financeiro</h2>
            <button onclick="fecharRelatorioFinanceiro()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <div style="display: grid; gap: 20px;">

            <!-- Tipo de relatório -->
            <div>
              <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">📋 Tipo de Relatório</label>
              <select id="tipoRelatorioFinanceiro" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;">
                <option value="completo">📊 Relatório Completo</option>
                <option value="receitas">💰 Apenas Receitas</option>
                <option value="despesas">💸 Apenas Despesas</option>
                <option value="fluxo">📈 Fluxo de Caixa</option>
                <option value="impostos">🧾 Relatório de Impostos</option>
              </select>
            </div>

            <!-- Período -->
            <div>
              <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">📅 Período</label>
              <select id="periodoRelatorioFinanceiro" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;">
                <option value="mes_atual">Este mês</option>
                <option value="mes_anterior">Mês anterior</option>
                <option value="trimestre">Último trimestre</option>
                <option value="semestre">Último semestre</option>
                <option value="ano">Este ano</option>
                <option value="personalizado">Período personalizado</option>
              </select>
            </div>

            <!-- Formato -->
            <div>
              <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">📁 Formato</label>
              <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
                <label style="display: flex; align-items: center; gap: 8px; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; cursor: pointer;" onclick="selecionarFormatoFinanceiro('excel')">
                  <input type="radio" name="formatoFinanceiro" value="excel" checked style="margin: 0;">
                  <span>📊 Excel (.xlsx)</span>
                </label>
                <label style="display: flex; align-items: center; gap: 8px; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; cursor: pointer;" onclick="selecionarFormatoFinanceiro('pdf')">
                  <input type="radio" name="formatoFinanceiro" value="pdf" style="margin: 0;">
                  <span>📄 PDF</span>
                </label>
              </div>
            </div>

          </div>

          <div style="display: flex; gap: 15px; margin-top: 30px;">
            <button onclick="fecharRelatorioFinanceiro()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; cursor: pointer;">
              Cancelar
            </button>
            <button onclick="gerarRelatorioFinanceiro()" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; cursor: pointer;">
              📊 Gerar Relatório
            </button>
          </div>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharRelatorioFinanceiro() {
      const modal = document.getElementById('modalRelatorioFinanceiro');
      if (modal) modal.remove();
    }

    function selecionarFormatoFinanceiro(formato) {
      const radios = document.querySelectorAll('input[name="formatoFinanceiro"]');
      radios.forEach(radio => {
        radio.checked = radio.value === formato;
        radio.parentElement.style.borderColor = radio.checked ? '#018820' : '#e0e0e0';
        radio.parentElement.style.background = radio.checked ? '#f0fdf4' : 'white';
      });
    }

    async function gerarRelatorioFinanceiro() {
      const tipo = document.getElementById('tipoRelatorioFinanceiro').value;
      const periodo = document.getElementById('periodoRelatorioFinanceiro').value;
      const formato = document.querySelector('input[name="formatoFinanceiro"]:checked').value;

      try {
        console.log('📊 Gerando relatório financeiro:', { tipo, periodo, formato });

        // Simular geração
        await new Promise(resolve => setTimeout(resolve, 2000));

        alert(`✅ Relatório financeiro gerado!\n\n📋 Tipo: ${tipo}\n📅 Período: ${periodo}\n📄 Formato: ${formato.toUpperCase()}\n\nO download iniciará automaticamente.`);

        fecharRelatorioFinanceiro();
      } catch (error) {
        alert('❌ Erro ao gerar relatório. Tente novamente.');
      }
    }

    // Adicionar conta bancária
    function adicionarContaBancaria() {
      const modal = document.createElement('div');
      modal.id = 'modalContaBancaria';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 20px; width: 95%; max-width: 450px; max-height: 85vh; overflow-y: auto; margin: 20px;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
            <h2 style="margin: 0; color: #333; font-size: 18px;">🏦 Adicionar Conta Bancária</h2>
            <button onclick="fecharModalContaBancaria()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <form id="formContaBancaria" onsubmit="salvarContaBancaria(event)">
            <div style="display: grid; gap: 20px;">

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">🏦 Banco</label>
                <select id="bancoInput" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;">
                  <option value="">Selecione o banco</option>
                  <option value="001">Banco do Brasil</option>
                  <option value="341">Itaú</option>
                  <option value="033">Santander</option>
                  <option value="104">Caixa Econômica</option>
                  <option value="237">Bradesco</option>
                  <option value="260">Nu Pagamentos</option>
                </select>
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">🏢 Agência</label>
                <input type="text" id="agenciaInput" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: 1234-5">
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">💳 Conta</label>
                <input type="text" id="contaInput" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: 67890-1">
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">📋 Tipo de Conta</label>
                <select id="tipoContaInput" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;">
                  <option value="corrente">Conta Corrente</option>
                  <option value="poupanca">Conta Poupança</option>
                </select>
              </div>

            </div>

            <div style="display: flex; gap: 15px; margin-top: 30px;">
              <button type="button" onclick="fecharModalContaBancaria()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; cursor: pointer;">
                Cancelar
              </button>
              <button type="submit" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; cursor: pointer;">
                💾 Salvar Conta
              </button>
            </div>
          </form>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharModalContaBancaria() {
      const modal = document.getElementById('modalContaBancaria');
      if (modal) modal.remove();
    }

    async function salvarContaBancaria(event) {
      event.preventDefault();

      const formData = {
        banco: document.getElementById('bancoInput').value,
        agencia: document.getElementById('agenciaInput').value,
        conta: document.getElementById('contaInput').value,
        tipo: document.getElementById('tipoContaInput').value
      };

      try {
        console.log('💾 Salvando conta bancária:', formData);

        const response = await fetch('/api/perfil/conta-bancaria', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        const result = await response.json();

        if (result.success) {
          mostrarToast('✅ Conta bancária adicionada com sucesso!', 'success');
          fecharModalContaBancaria();
          setTimeout(() => location.reload(), 1000);
        } else {
          throw new Error(result.message || 'Erro ao salvar conta');
        }
      } catch (error) {
        console.error('❌ Erro ao salvar conta:', error);
        mostrarToast('❌ Erro ao adicionar conta: ' + error.message, 'error');
      }
    }

    // Adicionar método de transferência
    function adicionarMetodoTransferencia() {
      const modal = document.createElement('div');
      modal.id = 'modalMetodoTransferencia';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 20px; width: 95%; max-width: 450px; max-height: 85vh; overflow-y: auto; margin: 20px;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
            <h2 style="margin: 0; color: #333; font-size: 18px;">🏦 Adicionar Método de Transferência</h2>
            <button onclick="fecharModalMetodoTransferencia()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <form onsubmit="salvarMetodoTransferencia(event)">
            <div style="display: grid; gap: 15px;">

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">💳 Tipo</label>
                <select id="tipoMetodo" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;">
                  <option value="pix">PIX</option>
                  <option value="ted">TED</option>
                  <option value="doc">DOC</option>
                </select>
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">📝 Chave/Dados</label>
                <input type="text" id="dadosMetodo" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: email@exemplo.com">
              </div>

            </div>

            <div style="display: flex; gap: 15px; margin-top: 20px;">
              <button type="button" onclick="fecharModalMetodoTransferencia()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; cursor: pointer;">
                Cancelar
              </button>
              <button type="submit" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; cursor: pointer;">
                💾 Salvar
              </button>
            </div>
          </form>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharModalMetodoTransferencia() {
      const modal = document.getElementById('modalMetodoTransferencia');
      if (modal) modal.remove();
    }

    async function salvarMetodoTransferencia(event) {
      event.preventDefault();

      const formData = {
        tipo: document.getElementById('tipoTransferencia').value,
        chave_pix: document.getElementById('chavePixInput').value
      };

      try {
        const response = await fetch('/api/perfil/metodo-transferencia', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        const result = await response.json();

        if (result.success) {
          mostrarToast('✅ Método de transferência adicionado com sucesso!', 'success');
          fecharModalMetodoTransferencia();
          setTimeout(() => location.reload(), 1000);
        } else {
          throw new Error(result.message || 'Erro ao salvar método');
        }
      } catch (error) {
        console.error('❌ Erro ao salvar método:', error);
        mostrarToast('❌ Erro ao adicionar método: ' + error.message, 'error');
      }
    }

    // Adicionar link de pagamento
    function adicionarLinkPagamento() {
      const modal = document.createElement('div');
      modal.id = 'modalLinkPagamento';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 20px; width: 95%; max-width: 450px; max-height: 85vh; overflow-y: auto; margin: 20px;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
            <h2 style="margin: 0; color: #333; font-size: 18px;">🔗 Adicionar Link de Pagamento</h2>
            <button onclick="fecharModalLinkPagamento()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <form onsubmit="salvarLinkPagamento(event)">
            <div style="display: grid; gap: 15px;">

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">🏢 Gateway</label>
                <select id="gatewayPagamento" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;">
                  <option value="mercadopago">Mercado Pago</option>
                  <option value="pagseguro">PagSeguro</option>
                  <option value="paypal">PayPal</option>
                  <option value="stripe">Stripe</option>
                </select>
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">🔑 Token/Chave API</label>
                <input type="text" id="tokenApi" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Cole aqui sua chave API">
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">💰 Taxa (%)</label>
                <input type="number" id="taxaGateway" step="0.01" min="0" max="100" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: 4.99">
              </div>

            </div>

            <div style="display: flex; gap: 15px; margin-top: 20px;">
              <button type="button" onclick="fecharModalLinkPagamento()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; cursor: pointer;">
                Cancelar
              </button>
              <button type="submit" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; cursor: pointer;">
                💾 Salvar
              </button>
            </div>
          </form>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharModalLinkPagamento() {
      const modal = document.getElementById('modalLinkPagamento');
      if (modal) modal.remove();
    }

    async function salvarLinkPagamento(event) {
      event.preventDefault();

      const formData = {
        gateway: document.getElementById('gatewayPagamento').value,
        link: document.getElementById('linkPagamentoInput').value
      };

      try {
        const response = await fetch('/api/perfil/link-pagamento', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        const result = await response.json();

        if (result.success) {
          mostrarToast('✅ Gateway de pagamento configurado com sucesso!', 'success');
          fecharModalLinkPagamento();
          setTimeout(() => location.reload(), 1000);
        } else {
          throw new Error(result.message || 'Erro ao salvar link');
        }
      } catch (error) {
        console.error('❌ Erro ao salvar link:', error);
        mostrarToast('❌ Erro ao configurar gateway: ' + error.message, 'error');
      }
    }

    // Editar informações pessoais
    function editarInformacoesPessoais() {
      const modal = document.createElement('div');
      modal.id = 'modalEditarPerfil';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 20px; width: 95%; max-width: 500px; max-height: 85vh; overflow-y: auto; margin: 20px;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
            <h2 style="margin: 0; color: #333; font-size: 18px;">✏️ Editar Informações Pessoais</h2>
            <button onclick="fecharModalEditarPerfil()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <form onsubmit="salvarEdicaoPerfil(event)">
            <div style="display: grid; gap: 15px;">

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">👤 Nome Completo</label>
                <input type="text" id="nomeCompleto" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" value="<%= usuario.nome %>">
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">📧 Email</label>
                <input type="email" id="emailUsuario" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" value="<%= usuario.email %>">
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">📱 Telefone</label>
                <input type="tel" id="telefoneUsuario" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" value="<%= usuario.telefone || '' %>" placeholder="(11) 99999-9999">
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">📄 CPF/CNPJ</label>
                <input type="text" id="documentoUsuario" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" value="<%= usuario.documento || '' %>" placeholder="000.000.000-00">
              </div>

            </div>

            <div style="display: flex; gap: 15px; margin-top: 20px;">
              <button type="button" onclick="fecharModalEditarPerfil()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; cursor: pointer;">
                Cancelar
              </button>
              <button type="submit" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; cursor: pointer;">
                💾 Salvar
              </button>
            </div>
          </form>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharModalEditarPerfil() {
      const modal = document.getElementById('modalEditarPerfil');
      if (modal) modal.remove();
    }

    async function salvarEdicaoPerfil(event) {
      event.preventDefault();

      const formData = {
        nome: document.getElementById('nomeCompleto').value,
        email: document.getElementById('emailUsuario').value,
        telefone: document.getElementById('telefoneUsuario').value,
        documento: document.getElementById('documentoUsuario').value
      };

      try {
        console.log('💾 Salvando perfil:', formData);

        // Enviar para API real
        const response = await fetch('/api/usuarios/perfil', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        const result = await response.json();

        if (result.success) {
          alert('✅ Informações pessoais atualizadas com sucesso!');
          fecharModalEditarPerfil();

          // Atualizar dados na tela
          document.querySelector('[data-field="nome"]').textContent = formData.nome;
          document.querySelector('[data-field="email"]').textContent = formData.email;
          document.querySelector('[data-field="telefone"]').textContent = formData.telefone || 'Não informado';
        } else {
          throw new Error(result.error || 'Erro desconhecido');
        }

      } catch (error) {
        console.error('❌ Erro ao salvar perfil:', error);
        alert('❌ Erro ao salvar informações: ' + error.message);
      }
    }

    // Salvar alterações
    async function salvarAlteracoes() {
      try {
        mostrarToast('💾 Salvando alterações...', 'info');

        const response = await fetch('/api/perfil/salvar-alteracoes', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            // Aqui você pode coletar dados dos campos do perfil
            timestamp: new Date().toISOString()
          })
        });

        const result = await response.json();

        if (result.success) {
          mostrarToast('✅ Todas as informações foram atualizadas com sucesso!', 'success');
        } else {
          throw new Error(result.message || 'Erro ao salvar');
        }
      } catch (error) {
        console.error('❌ Erro ao salvar:', error);
        mostrarToast('❌ Erro ao salvar alterações: ' + error.message, 'error');
      }
    }

    // Alterar senha
    function alterarSenha() {
      const modal = document.createElement('div');
      modal.id = 'modalAlterarSenha';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 20px; width: 95%; max-width: 450px; max-height: 85vh; overflow-y: auto; margin: 20px;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
            <h2 style="margin: 0; color: #333; font-size: 18px;">🔒 Alterar Senha</h2>
            <button onclick="fecharModalAlterarSenha()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <form id="formAlterarSenha" onsubmit="salvarNovaSenha(event)">
            <div style="display: grid; gap: 20px;">

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">🔐 Senha Atual</label>
                <input type="password" id="senhaAtualInput" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Digite sua senha atual">
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">🆕 Nova Senha</label>
                <input type="password" id="novaSenhaInput" required minlength="6" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Digite a nova senha">
              </div>

              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">✅ Confirmar Nova Senha</label>
                <input type="password" id="confirmarSenhaInput" required minlength="6" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Confirme a nova senha">
              </div>

              <div style="background: #f0f9ff; padding: 15px; border-radius: 8px; border: 2px solid #3b82f6;">
                <div style="font-weight: 600; color: #333; margin-bottom: 5px;">🛡️ Requisitos de Segurança:</div>
                <div style="color: #666; font-size: 14px;">
                  • Mínimo 6 caracteres<br>
                  • Recomendado: letras, números e símbolos
                </div>
              </div>

            </div>

            <div style="display: flex; gap: 15px; margin-top: 30px;">
              <button type="button" onclick="fecharModalAlterarSenha()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; cursor: pointer;">
                Cancelar
              </button>
              <button type="submit" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; cursor: pointer;">
                🔒 Alterar Senha
              </button>
            </div>
          </form>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharModalAlterarSenha() {
      const modal = document.getElementById('modalAlterarSenha');
      if (modal) modal.remove();
    }

    async function salvarNovaSenha(event) {
      event.preventDefault();

      const senhaAtual = document.getElementById('senhaAtualInput').value;
      const novaSenha = document.getElementById('novaSenhaInput').value;
      const confirmarSenha = document.getElementById('confirmarSenhaInput').value;

      if (novaSenha !== confirmarSenha) {
        alert('❌ As senhas não coincidem. Tente novamente.');
        return;
      }

      try {
        console.log('🔒 Alterando senha...');
        await new Promise(resolve => setTimeout(resolve, 1500));

        alert('✅ Senha alterada com sucesso!\n\nPor segurança, você será redirecionado para fazer login novamente.');
        fecharModalAlterarSenha();

        // Simular logout
        setTimeout(() => {
          window.location.href = '/login';
        }, 2000);
      } catch (error) {
        alert('❌ Erro ao alterar senha. Tente novamente.');
      }
    }

    // Baixar dados
    async function baixarDados() {
      try {
        mostrarToast('📄 Preparando download dos seus dados...', 'info');

        const response = await fetch('/api/perfil/exportar-dados');
        const result = await response.json();

        if (result.success) {
          // Criar arquivo JSON com os dados
          const dadosCompletos = {
            perfil: result.data.perfil,
            vendas: result.data.vendas,
            pedidos: result.data.pedidos,
            produtos: result.data.produtos,
            configuracoes: result.data.configuracoes,
            exportado_em: new Date().toISOString()
          };

          const jsonContent = JSON.stringify(dadosCompletos, null, 2);

          // Download do arquivo
          const blob = new Blob([jsonContent], { type: 'application/json;charset=utf-8;' });
          const link = document.createElement('a');
          const url = URL.createObjectURL(blob);
          link.setAttribute('href', url);
          link.setAttribute('download', `meus_dados_pcr_labor_${new Date().toISOString().split('T')[0]}.json`);
          link.style.visibility = 'hidden';
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);

          mostrarToast('✅ Download iniciado! Verifique sua pasta de downloads.', 'success');
        } else {
          throw new Error(result.message || 'Erro ao exportar dados');
        }
      } catch (error) {
        console.error('❌ Erro ao baixar dados:', error);
        mostrarToast('❌ Erro ao baixar dados: ' + error.message, 'error');
      }
    }

    // ===== FUNÇÃO TOAST =====
    function mostrarToast(mensagem, tipo = 'info') {
      const toast = document.createElement('div');
      toast.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: ${tipo === 'success' ? '#16a34a' : tipo === 'error' ? '#dc2626' : '#3b82f6'};
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        font-weight: 600;
        z-index: 10000;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        max-width: 400px;
        word-wrap: break-word;
      `;
      toast.textContent = mensagem;
      document.body.appendChild(toast);
      setTimeout(() => toast.remove(), 4000);
    }

    console.log('👤 Página de perfil carregada com funcionalidades completas');
  </script>
</body>
</html>
