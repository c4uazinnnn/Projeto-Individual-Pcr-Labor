<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= pageTitle %></title>
  <link rel="stylesheet" href="/css/estilos.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <!-- Header horizontal (Topo) com logo e menu -->
  <%- include('../components/cabecalho') %>

  <!-- Layout principal -->
  <div class="main-layout">
    <!-- √Årea central para o conte√∫do principal -->
    <main class="content-area">
      <!-- 5Ô∏è‚É£ Tela de Estoque -->
      <h1 class="page-title">Estoque</h1>

      <!-- Gr√°ficos circulares: "Em estoque", "Quantidade de compras", "A enviar" -->
      <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 30px; margin-bottom: 40px;">

        <!-- Gr√°fico "Em estoque" -->
        <div class="content-section">
          <div class="section-header">
            <h3 class="section-title">üì¶ Em estoque</h3>
          </div>
          <div class="section-content">
            <div style="position: relative; height: 250px;">
              <canvas id="estoqueChart"></canvas>
            </div>
            <div style="text-align: center; margin-top: 15px;">
              <div style="font-size: 24px; font-weight: bold; color: #018820;">
                <%= produtos.reduce((total, p) => total + p.estoque_atual, 0) %>
              </div>
              <div style="color: #666; font-size: 14px;">Unidades totais</div>
            </div>
          </div>
        </div>

        <!-- Gr√°fico "Quantidade de compras" -->
        <div class="content-section">
          <div class="section-header">
            <h3 class="section-title">üõí Quantidade de compras</h3>
          </div>
          <div class="section-content">
            <div style="position: relative; height: 250px;">
              <canvas id="comprasChart"></canvas>
            </div>
            <div style="text-align: center; margin-top: 15px;">
              <div style="font-size: 24px; font-weight: bold; color: #3b82f6;">R$ 45.200</div>
              <div style="color: #666; font-size: 14px;">Valor em compras</div>
            </div>
          </div>
        </div>

        <!-- Gr√°fico "A enviar" -->
        <div class="content-section">
          <div class="section-header">
            <h3 class="section-title">üöö A enviar</h3>
          </div>
          <div class="section-content">
            <div style="position: relative; height: 250px;">
              <canvas id="enviarChart"></canvas>
            </div>
            <div style="text-align: center; margin-top: 15px;">
              <div style="font-size: 24px; font-weight: bold; color: #f59e0b;">28</div>
              <div style="color: #666; font-size: 14px;">Pedidos pendentes</div>
            </div>
          </div>
        </div>

      </div>

      <!-- Filtros e A√ß√µes -->
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; flex-wrap: wrap; gap: 15px;">
        <div style="display: flex; gap: 10px; flex-wrap: wrap;">
          <button class="btn btn-primary" onclick="filtrarEstoque('todos')" id="filtroTodosEstoque">Todos</button>
          <button class="btn btn-secondary" onclick="filtrarEstoque('baixo')" id="filtroBaixoEstoque">Estoque Baixo</button>
          <button class="btn btn-secondary" onclick="filtrarEstoque('normal')" id="filtroNormalEstoque">Normal</button>
          <button class="btn btn-secondary" onclick="filtrarEstoque('critico')" id="filtroCriticoEstoque">Cr√≠tico</button>
          <button class="btn btn-secondary" onclick="abrirFiltroAvancadoEstoque()">üîç Filtros</button>
        </div>
        <div style="display: flex; gap: 10px;">
          <button class="btn btn-secondary" onclick="exportarEstoque()">üìÑ Exportar</button>
          <button class="btn btn-secondary" onclick="atualizarEstoque()">üîÑ Atualizar</button>
          <button class="btn btn-primary" onclick="adicionarProdutoEstoque()">+ Adicionar Produto</button>
        </div>
      </div>

      <!-- Lista detalhada de produtos -->
      <div class="content-section">
        <div class="section-header">
          <h3 class="section-title">üìã Produtos em Estoque</h3>
        </div>
        <div class="section-content">
          <table class="data-table">
            <thead>
              <tr>
                <th>Produto</th>
                <th>SKU</th>
                <th>Estoque Atual</th>
                <th>Estoque M√≠nimo</th>
                <th>Pre√ßo</th>
                <th>Status</th>
                <th>A√ß√µes</th>
              </tr>
            </thead>
            <tbody>
              <% if (produtos && produtos.length > 0) { %>
                <% produtos.forEach(produto => { %>
                  <tr>
                    <td><strong><%= produto.nome %></strong></td>
                    <td><%= produto.sku %></td>
                    <td>
                      <% if (produto.estoque_atual <= 10) { %>
                        <span style="color: #ef4444; font-weight: bold;"><%= produto.estoque_atual %></span>
                      <% } else { %>
                        <span style="color: #16a34a;"><%= produto.estoque_atual %></span>
                      <% } %>
                    </td>
                    <td>10</td>
                    <td>R$ <%= parseFloat(produto.preco).toFixed(2) %></td>
                    <td>
                      <% if (produto.estoque_atual <= 10) { %>
                        <span style="background: #fee2e2; color: #dc2626; padding: 4px 8px; border-radius: 4px; font-size: 12px;">‚ö†Ô∏è Baixo</span>
                      <% } else { %>
                        <span style="background: #dcfce7; color: #16a34a; padding: 4px 8px; border-radius: 4px; font-size: 12px;">‚úÖ Normal</span>
                      <% } %>
                    </td>
                    <td>
                      <div style="display: flex; gap: 5px;">
                        <button class="btn btn-primary" onclick="editarEstoque(<%= produto.id_produto %>)" style="padding: 6px 12px; font-size: 12px;">
                          ‚úèÔ∏è Editar
                        </button>
                        <button class="btn btn-secondary" onclick="ajustarEstoque(<%= produto.id_produto %>)" style="padding: 6px 12px; font-size: 12px;">
                          üìä Ajustar
                        </button>
                        <button class="btn btn-secondary" onclick="verHistoricoEstoque(<%= produto.id_produto %>)" style="padding: 6px 12px; font-size: 12px;">
                          üìà Hist√≥rico
                        </button>
                      </div>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="7" style="text-align: center; color: #666; padding: 40px;">
                    Nenhum produto encontrado
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>

    </main>

    <!-- Lateral direita com Tarefas, Calend√°rio e Pergunte para IA -->
    <%- include('../components/barraLateral') %>
  </div>

  <script>
    // Gr√°fico "Em estoque"
    const estoqueCtx = document.getElementById('estoqueChart').getContext('2d');
    new Chart(estoqueCtx, {
      type: 'doughnut',
      data: {
        labels: ['Normal', 'Baixo', 'Cr√≠tico'],
        datasets: [{
          data: [65, 25, 10],
          backgroundColor: ['#16a34a', '#f59e0b', '#ef4444'],
          borderWidth: 0
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'bottom'
          }
        }
      }
    });

    // Gr√°fico "Quantidade de compras"
    const comprasCtx = document.getElementById('comprasChart').getContext('2d');
    new Chart(comprasCtx, {
      type: 'doughnut',
      data: {
        labels: ['Realizadas', 'Pendentes', 'Canceladas'],
        datasets: [{
          data: [70, 20, 10],
          backgroundColor: ['#3b82f6', '#f59e0b', '#ef4444'],
          borderWidth: 0
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'bottom'
          }
        }
      }
    });

    // Gr√°fico "A enviar"
    const enviarCtx = document.getElementById('enviarChart').getContext('2d');
    new Chart(enviarCtx, {
      type: 'doughnut',
      data: {
        labels: ['Preparando', 'Pronto', 'Enviado'],
        datasets: [{
          data: [40, 35, 25],
          backgroundColor: ['#f59e0b', '#8b5cf6', '#16a34a'],
          borderWidth: 0
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'bottom'
          }
        }
      }
    });

    // ===== FUNCIONALIDADES DE ESTOQUE =====

    // ===== FILTROS DE ESTOQUE FUNCIONAIS =====
    let produtosOriginais = <%- JSON.stringify(produtos) %>;

    function filtrarEstoque(tipo) {
      // Atualizar bot√µes visuais
      document.querySelectorAll('[id*="Estoque"]').forEach(btn => {
        btn.className = 'btn btn-secondary';
      });

      if (tipo === 'todos') {
        document.getElementById('filtroTodosEstoque').className = 'btn btn-primary';
      } else if (tipo === 'baixo') {
        document.getElementById('filtroBaixoEstoque').className = 'btn btn-primary';
      } else if (tipo === 'normal') {
        document.getElementById('filtroNormalEstoque').className = 'btn btn-primary';
      } else if (tipo === 'critico') {
        document.getElementById('filtroCriticoEstoque').className = 'btn btn-primary';
      }

      // Aplicar filtro REAL
      let produtosFiltrados = [];

      switch(tipo) {
        case 'baixo':
          produtosFiltrados = produtosOriginais.filter(produto => produto.estoque_atual <= 10 && produto.estoque_atual > 5);
          break;
        case 'critico':
          produtosFiltrados = produtosOriginais.filter(produto => produto.estoque_atual <= 5);
          break;
        case 'normal':
          produtosFiltrados = produtosOriginais.filter(produto => produto.estoque_atual > 10);
          break;
        case 'todos':
        default:
          produtosFiltrados = [...produtosOriginais];
          break;
      }

      console.log(`üîç Filtrando estoque por: ${tipo}`);
      console.log(`üì¶ Produtos encontrados: ${produtosFiltrados.length}`);

      // Atualizar a tabela
      atualizarTabelaEstoque(produtosFiltrados);

      // Atualizar gr√°ficos
      atualizarGraficosEstoque(produtosFiltrados);

      // Feedback visual
      const toast = document.createElement('div');
      toast.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: #018820;
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        z-index: 1000;
      `;
      toast.textContent = `‚úÖ ${produtosFiltrados.length} produtos encontrados - ${tipo === 'todos' ? 'Todos' : tipo === 'baixo' ? 'Estoque baixo' : tipo === 'normal' ? 'Estoque normal' : 'Estoque cr√≠tico'}`;
      document.body.appendChild(toast);
      setTimeout(() => toast.remove(), 3000);
    }

    function atualizarTabelaEstoque(produtos) {
      const tbody = document.querySelector('.data-table tbody');
      if (!tbody) return;

      if (produtos.length === 0) {
        tbody.innerHTML = `
          <tr>
            <td colspan="7" style="text-align: center; color: #666; padding: 40px;">
              <div style="font-size: 48px; margin-bottom: 15px;">üîç</div>
              <div style="font-size: 16px; margin-bottom: 10px;">Nenhum produto encontrado</div>
              <div style="font-size: 14px; color: #999;">Tente ajustar os filtros</div>
            </td>
          </tr>
        `;
        return;
      }

      tbody.innerHTML = produtos.map(produto => `
        <tr>
          <td><strong>${produto.nome}</strong></td>
          <td>${produto.sku}</td>
          <td>
            ${produto.estoque_atual <= 10
              ? `<span style="color: #ef4444; font-weight: bold;">${produto.estoque_atual}</span>`
              : `<span style="color: #16a34a;">${produto.estoque_atual}</span>`
            }
          </td>
          <td>10</td>
          <td>R$ ${parseFloat(produto.preco).toFixed(2)}</td>
          <td>
            ${produto.estoque_atual <= 5
              ? '<span style="background: #fee2e2; color: #dc2626; padding: 4px 8px; border-radius: 4px; font-size: 12px;">üö® Cr√≠tico</span>'
              : produto.estoque_atual <= 10
                ? '<span style="background: #fef3c7; color: #d97706; padding: 4px 8px; border-radius: 4px; font-size: 12px;">‚ö†Ô∏è Baixo</span>'
                : '<span style="background: #dcfce7; color: #16a34a; padding: 4px 8px; border-radius: 4px; font-size: 12px;">‚úÖ Normal</span>'
            }
          </td>
          <td>
            <div style="display: flex; gap: 5px;">
              <button class="btn btn-primary" onclick="editarEstoque(${produto.id_produto})" style="padding: 6px 12px; font-size: 12px;">
                ‚úèÔ∏è Editar
              </button>
              <button class="btn btn-secondary" onclick="ajustarEstoque(${produto.id_produto})" style="padding: 6px 12px; font-size: 12px;">
                üìä Ajustar
              </button>
              <button class="btn btn-secondary" onclick="verHistoricoEstoque(${produto.id_produto})" style="padding: 6px 12px; font-size: 12px;">
                üìà Hist√≥rico
              </button>
            </div>
          </td>
        </tr>
      `).join('');
    }

    function atualizarGraficosEstoque(produtos) {
      // Calcular dados para os gr√°ficos
      const normal = produtos.filter(p => p.estoque_atual > 10).length;
      const baixo = produtos.filter(p => p.estoque_atual <= 10 && p.estoque_atual > 5).length;
      const critico = produtos.filter(p => p.estoque_atual <= 5).length;

      const totalUnidades = produtos.reduce((total, p) => total + p.estoque_atual, 0);

      // Atualizar valor total de unidades
      const valorTotal = document.querySelector('.content-section:first-child .section-content div[style*="font-size: 24px"]');
      if (valorTotal) {
        valorTotal.textContent = totalUnidades.toString();
      }

      // Atualizar gr√°fico de estoque (se existir refer√™ncia global)
      if (window.estoqueChart) {
        window.estoqueChart.data.datasets[0].data = [normal, baixo, critico];
        window.estoqueChart.update();
      }
    }

    // Adicionar produto ao estoque
    function adicionarProdutoEstoque() {
      const modal = document.createElement('div');
      modal.id = 'modalAdicionarProduto';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 30px; width: 90%; max-width: 600px; max-height: 90vh; overflow-y: auto;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px;">
            <h2 style="margin: 0; color: #333;">üì¶ Adicionar Produto ao Estoque</h2>
            <button onclick="fecharModalAdicionarProduto()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <form id="formAdicionarProduto" onsubmit="criarProdutoEstoque(event)">
            <div style="display: grid; gap: 20px;">

              <!-- Nome -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üìù Nome do Produto</label>
                <input type="text" id="nomeEstoqueInput" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: Kit PCR COVID-19">
              </div>

              <!-- SKU -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üè∑Ô∏è SKU</label>
                <input type="text" id="skuEstoqueInput" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: PCR-COVID-001">
              </div>

              <!-- Pre√ßo -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üí∞ Pre√ßo (R$)</label>
                <input type="number" id="precoEstoqueInput" step="0.01" min="0" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: 89.90">
              </div>

              <!-- Estoque Inicial -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üìä Estoque Inicial</label>
                <input type="number" id="estoqueInicialInput" min="0" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: 100">
              </div>

              <!-- Estoque M√≠nimo -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">‚ö†Ô∏è Estoque M√≠nimo</label>
                <input type="number" id="estoqueMinInput" min="0" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: 10" value="10">
              </div>

            </div>

            <div style="display: flex; gap: 15px; margin-top: 30px;">
              <button type="button" onclick="fecharModalAdicionarProduto()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; font-size: 16px; cursor: pointer;">
                Cancelar
              </button>
              <button type="submit" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; font-size: 16px; cursor: pointer;">
                üì¶ Adicionar ao Estoque
              </button>
            </div>
          </form>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharModalAdicionarProduto() {
      const modal = document.getElementById('modalAdicionarProduto');
      if (modal) modal.remove();
    }

    async function criarProdutoEstoque(event) {
      event.preventDefault();

      const formData = {
        nome: document.getElementById('nomeEstoqueInput').value,
        sku: document.getElementById('skuEstoqueInput').value,
        preco: parseFloat(document.getElementById('precoEstoqueInput').value),
        estoque_atual: parseInt(document.getElementById('estoqueInicialInput').value),
        estoque_minimo: parseInt(document.getElementById('estoqueMinInput').value)
      };

      try {
        const response = await fetch('/api/produtos', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(formData)
        });

        const result = await response.json();

        if (result.success) {
          alert('‚úÖ Produto adicionado ao estoque com sucesso!');
          fecharModalAdicionarProduto();
          location.reload();
        } else {
          alert('‚ùå Erro ao adicionar produto: ' + (result.error || 'Erro desconhecido'));
        }
      } catch (error) {
        console.error('Erro ao adicionar produto:', error);
        alert('‚ùå Erro ao adicionar produto. Tente novamente.');
      }
    }

    // Editar produto no estoque
    function editarEstoque(id) {
      const modal = document.createElement('div');
      modal.id = 'modalEditarEstoque';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 30px; width: 90%; max-width: 600px; max-height: 90vh; overflow-y: auto;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px;">
            <h2 style="margin: 0; color: #333;">‚úèÔ∏è Editar Produto #${id}</h2>
            <button onclick="fecharModalEditarEstoque()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <form id="formEditarEstoque" onsubmit="salvarEdicaoEstoque(event, ${id})">
            <div style="display: grid; gap: 20px;">

              <!-- Nome -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üìù Nome do Produto</label>
                <input type="text" id="nomeEditEstoque" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" value="Kit PCR COVID-19">
              </div>

              <!-- SKU -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üè∑Ô∏è SKU</label>
                <input type="text" id="skuEditEstoque" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" value="PCR-COVID-001">
              </div>

              <!-- Pre√ßo -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üí∞ Pre√ßo (R$)</label>
                <input type="number" id="precoEditEstoque" step="0.01" min="0" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" value="89.90">
              </div>

              <!-- Estoque M√≠nimo -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">‚ö†Ô∏è Estoque M√≠nimo</label>
                <input type="number" id="estoqueMinEditEstoque" min="0" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" value="10">
              </div>

            </div>

            <div style="display: flex; gap: 15px; margin-top: 30px;">
              <button type="button" onclick="fecharModalEditarEstoque()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; font-size: 16px; cursor: pointer;">
                Cancelar
              </button>
              <button type="submit" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; font-size: 16px; cursor: pointer;">
                ‚úÖ Salvar Altera√ß√µes
              </button>
            </div>
          </form>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharModalEditarEstoque() {
      const modal = document.getElementById('modalEditarEstoque');
      if (modal) modal.remove();
    }

    async function salvarEdicaoEstoque(event, id) {
      event.preventDefault();

      const formData = {
        nome: document.getElementById('nomeEditEstoque').value,
        sku: document.getElementById('skuEditEstoque').value,
        preco: parseFloat(document.getElementById('precoEditEstoque').value),
        estoque_minimo: parseInt(document.getElementById('estoqueMinEditEstoque').value)
      };

      try {
        // Simular requisi√ß√£o PUT para API
        console.log('Editando produto:', id, formData);

        // Simular delay
        await new Promise(resolve => setTimeout(resolve, 1000));

        alert('‚úÖ Produto editado com sucesso!');
        fecharModalEditarEstoque();
        location.reload();
      } catch (error) {
        console.error('Erro ao editar produto:', error);
        alert('‚ùå Erro ao editar produto. Tente novamente.');
      }
    }

    // Ajustar estoque
    function ajustarEstoque(id) {
      const modal = document.createElement('div');
      modal.id = 'modalAjustarEstoque';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 30px; width: 90%; max-width: 500px;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px;">
            <h2 style="margin: 0; color: #333;">üìä Ajustar Estoque #${id}</h2>
            <button onclick="fecharModalAjustarEstoque()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="margin: 0 0 10px; color: #333;">Kit PCR COVID-19</h3>
            <div style="color: #666;">Estoque atual: <strong>150 unidades</strong></div>
          </div>

          <form id="formAjustarEstoque" onsubmit="salvarAjusteEstoque(event, ${id})">
            <div style="display: grid; gap: 20px;">

              <!-- Tipo de ajuste -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üìã Tipo de Ajuste</label>
                <select id="tipoAjuste" onchange="atualizarTipoAjuste()" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;">
                  <option value="entrada">‚ûï Entrada (Adicionar)</option>
                  <option value="saida">‚ûñ Sa√≠da (Remover)</option>
                  <option value="correcao">üîß Corre√ß√£o (Definir valor exato)</option>
                </select>
              </div>

              <!-- Quantidade -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üìä Quantidade</label>
                <input type="number" id="quantidadeAjuste" min="1" required style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;" placeholder="Ex: 50">
              </div>

              <!-- Motivo -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üìù Motivo</label>
                <select id="motivoAjuste" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px;">
                  <option value="compra">Compra de mercadoria</option>
                  <option value="devolucao">Devolu√ß√£o de cliente</option>
                  <option value="perda">Perda/Avaria</option>
                  <option value="venda">Venda manual</option>
                  <option value="inventario">Ajuste de invent√°rio</option>
                  <option value="outro">Outro motivo</option>
                </select>
              </div>

              <!-- Observa√ß√µes -->
              <div>
                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">üí¨ Observa√ß√µes</label>
                <textarea id="observacoesAjuste" style="width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px; min-height: 60px;" placeholder="Observa√ß√µes adicionais..."></textarea>
              </div>

              <!-- Preview do resultado -->
              <div id="previewAjuste" style="background: #f0fff4; padding: 15px; border-radius: 8px; border: 2px solid #16a34a;">
                <div style="font-weight: 600; color: #333; margin-bottom: 5px;">üìä Resultado do Ajuste:</div>
                <div style="color: #16a34a;">Estoque atual: 150 ‚Üí Novo estoque: 150</div>
              </div>

            </div>

            <div style="display: flex; gap: 15px; margin-top: 30px;">
              <button type="button" onclick="fecharModalAjustarEstoque()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; font-size: 16px; cursor: pointer;">
                Cancelar
              </button>
              <button type="submit" style="flex: 1; padding: 12px; background: #018820; color: white; border: none; border-radius: 8px; font-size: 16px; cursor: pointer;">
                üìä Aplicar Ajuste
              </button>
            </div>
          </form>
        </div>
      `;

      document.body.appendChild(modal);

      // Event listeners
      document.getElementById('tipoAjuste').addEventListener('change', atualizarPreviewAjuste);
      document.getElementById('quantidadeAjuste').addEventListener('input', atualizarPreviewAjuste);
    }

    function fecharModalAjustarEstoque() {
      const modal = document.getElementById('modalAjustarEstoque');
      if (modal) modal.remove();
    }

    function atualizarPreviewAjuste() {
      const tipo = document.getElementById('tipoAjuste').value;
      const quantidade = parseInt(document.getElementById('quantidadeAjuste').value) || 0;
      const estoqueAtual = 150; // Em produ√ß√£o, pegar do produto real

      let novoEstoque = estoqueAtual;
      let cor = '#16a34a';

      if (tipo === 'entrada') {
        novoEstoque = estoqueAtual + quantidade;
      } else if (tipo === 'saida') {
        novoEstoque = estoqueAtual - quantidade;
        if (novoEstoque < 0) {
          novoEstoque = 0;
          cor = '#ef4444';
        }
      } else if (tipo === 'correcao') {
        novoEstoque = quantidade;
      }

      const preview = document.getElementById('previewAjuste');
      preview.style.borderColor = cor;
      preview.style.background = cor === '#ef4444' ? '#fef2f2' : '#f0fff4';
      preview.innerHTML = `
        <div style="font-weight: 600; color: #333; margin-bottom: 5px;">üìä Resultado do Ajuste:</div>
        <div style="color: ${cor};">Estoque atual: ${estoqueAtual} ‚Üí Novo estoque: ${novoEstoque}</div>
      `;
    }

    async function salvarAjusteEstoque(event, id) {
      event.preventDefault();

      const ajusteData = {
        tipo: document.getElementById('tipoAjuste').value,
        quantidade: parseInt(document.getElementById('quantidadeAjuste').value),
        motivo: document.getElementById('motivoAjuste').value,
        observacoes: document.getElementById('observacoesAjuste').value
      };

      try {
        console.log('Ajustando estoque:', id, ajusteData);

        // Simular delay
        await new Promise(resolve => setTimeout(resolve, 1000));

        alert('‚úÖ Estoque ajustado com sucesso!');
        fecharModalAjustarEstoque();
        location.reload();
      } catch (error) {
        console.error('Erro ao ajustar estoque:', error);
        alert('‚ùå Erro ao ajustar estoque. Tente novamente.');
      }
    }

    // Ver hist√≥rico do estoque
    function verHistoricoEstoque(id) {
      const modal = document.createElement('div');
      modal.id = 'modalHistoricoEstoque';
      modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      `;

      modal.innerHTML = `
        <div style="background: white; border-radius: 12px; padding: 30px; width: 90%; max-width: 700px; max-height: 90vh; overflow-y: auto;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px;">
            <h2 style="margin: 0; color: #333;">üìà Hist√≥rico de Estoque #${id}</h2>
            <button onclick="fecharModalHistoricoEstoque()" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
          </div>

          <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="margin: 0 0 10px; color: #333;">Kit PCR COVID-19</h3>
            <div style="color: #666;">Estoque atual: <strong>150 unidades</strong></div>
          </div>

          <div style="display: grid; gap: 15px;">

            <!-- Entrada 1 -->
            <div style="display: flex; justify-content: space-between; align-items: center; padding: 15px; background: #f0fff4; border-radius: 8px; border-left: 4px solid #16a34a;">
              <div>
                <div style="font-weight: 600; color: #333;">‚ûï Entrada - Compra de mercadoria</div>
                <div style="color: #666; font-size: 14px;">15/12/2024 14:30 por Jo√£o Silva</div>
                <div style="color: #666; font-size: 12px;">Obs: Reposi√ß√£o mensal</div>
              </div>
              <div style="text-align: right;">
                <div style="font-size: 18px; font-weight: bold; color: #16a34a;">+50</div>
                <div style="color: #666; font-size: 12px;">100 ‚Üí 150</div>
              </div>
            </div>

            <!-- Sa√≠da 1 -->
            <div style="display: flex; justify-content: space-between; align-items: center; padding: 15px; background: #fef2f2; border-radius: 8px; border-left: 4px solid #ef4444;">
              <div>
                <div style="font-weight: 600; color: #333;">‚ûñ Sa√≠da - Venda Shopee</div>
                <div style="color: #666; font-size: 14px;">14/12/2024 16:45 por Sistema</div>
                <div style="color: #666; font-size: 12px;">Venda #SH-2024-001234</div>
              </div>
              <div style="text-align: right;">
                <div style="font-size: 18px; font-weight: bold; color: #ef4444;">-5</div>
                <div style="color: #666; font-size: 12px;">105 ‚Üí 100</div>
              </div>
            </div>

            <!-- Entrada 2 -->
            <div style="display: flex; justify-content: space-between; align-items: center; padding: 15px; background: #f0fff4; border-radius: 8px; border-left: 4px solid #16a34a;">
              <div>
                <div style="font-weight: 600; color: #333;">‚ûï Entrada - Devolu√ß√£o de cliente</div>
                <div style="color: #666; font-size: 14px;">13/12/2024 10:20 por Maria Santos</div>
                <div style="color: #666; font-size: 12px;">Produto com defeito</div>
              </div>
              <div style="text-align: right;">
                <div style="font-size: 18px; font-weight: bold; color: #16a34a;">+2</div>
                <div style="color: #666; font-size: 12px;">103 ‚Üí 105</div>
              </div>
            </div>

            <!-- Sa√≠da 2 -->
            <div style="display: flex; justify-content: space-between; align-items: center; padding: 15px; background: #fef2f2; border-radius: 8px; border-left: 4px solid #ef4444;">
              <div>
                <div style="font-weight: 600; color: #333;">‚ûñ Sa√≠da - Venda Mercado Livre</div>
                <div style="color: #666; font-size: 14px;">12/12/2024 09:15 por Sistema</div>
                <div style="color: #666; font-size: 12px;">Venda #ML-2024-005678</div>
              </div>
              <div style="text-align: right;">
                <div style="font-size: 18px; font-weight: bold; color: #ef4444;">-3</div>
                <div style="color: #666; font-size: 12px;">106 ‚Üí 103</div>
              </div>
            </div>

            <!-- Corre√ß√£o -->
            <div style="display: flex; justify-content: space-between; align-items: center; padding: 15px; background: #faf5ff; border-radius: 8px; border-left: 4px solid #8b5cf6;">
              <div>
                <div style="font-weight: 600; color: #333;">üîß Corre√ß√£o - Ajuste de invent√°rio</div>
                <div style="color: #666; font-size: 14px;">10/12/2024 08:00 por Admin</div>
                <div style="color: #666; font-size: 12px;">Invent√°rio mensal</div>
              </div>
              <div style="text-align: right;">
                <div style="font-size: 18px; font-weight: bold; color: #8b5cf6;">+6</div>
                <div style="color: #666; font-size: 12px;">100 ‚Üí 106</div>
              </div>
            </div>

          </div>

          <div style="display: flex; gap: 15px; margin-top: 30px;">
            <button onclick="fecharModalHistoricoEstoque()" style="flex: 1; padding: 12px; background: #6b7280; color: white; border: none; border-radius: 8px; cursor: pointer;">
              Fechar
            </button>
            <button onclick="exportarHistoricoEstoque(${id})" style="flex: 1; padding: 12px; background: #3b82f6; color: white; border: none; border-radius: 8px; cursor: pointer;">
              üìÑ Exportar Hist√≥rico
            </button>
          </div>
        </div>
      `;

      document.body.appendChild(modal);
    }

    function fecharModalHistoricoEstoque() {
      const modal = document.getElementById('modalHistoricoEstoque');
      if (modal) modal.remove();
    }

    function exportarHistoricoEstoque(id) {
      alert(`üìÑ Exportando hist√≥rico do produto #${id}...\n\nArquivo Excel ser√° gerado com todo o hist√≥rico de movimenta√ß√µes.`);
    }

    // Outras fun√ß√µes
    function exportarEstoque() {
      alert('üìÑ Exportando relat√≥rio de estoque...\n\nArquivo Excel ser√° gerado com todos os produtos e seus estoques.');
    }

    function atualizarEstoque() {
      alert('üîÑ Atualizando dados do estoque...\n\nSincronizando com as plataformas de venda.');
      setTimeout(() => {
        alert('‚úÖ Estoque atualizado com sucesso!');
        location.reload();
      }, 2000);
    }

    function abrirFiltroAvancadoEstoque() {
      alert('üîç Filtros avan√ßados para estoque\n\nModal com filtros por categoria, fornecedor, data, etc.');
    }

    console.log('üì¶ P√°gina de estoque carregada com funcionalidades completas');
  </script>
</body>
</html>
